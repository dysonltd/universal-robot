def rtde_control_loop():
  global _hidden_verificationVariable=0
  set_tcp(p[0.0,0.0,0.0,0.0,0.0,0.0])
  set_target_payload(1.000000, [0.000000, 0.000000, 0.000000], [0.001539, 0.001539, 0.001539, 0.000000, 0.000000, 0.000000])
  set_gravity([0.0, 0.0, 9.82])
  set_safety_mode_transition_hardness(1)
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  step_count_3f356005_788f_4649_9fbe_1bbbeea09697 = 0.0
  thread Step_Counter_Thread_b8e2d531_ad1c_4446_b528_c42d98d1d138():
    while (True):
      step_count_3f356005_788f_4649_9fbe_1bbbeea09697 = step_count_3f356005_788f_4649_9fbe_1bbbeea09697 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_b8e2d531_ad1c_4446_b528_c42d98d1d138()
  $ 2 "BeforeStart"
  $ 3 "setp≔p[0,0,0,0,0,0]"
  global setp=p[0,0,0,0,0,0]
  $ 5 "write_output_integer_register(0, 1)"
  write_output_integer_register(0, 1)
  $ 19 "Thread_1"
  thread Thread_1():
    while (True):
      $ 20 "Loop"
      while (True):
        $ 21 "tmp≔p[0,0,0,0,0,0]"
        global tmp=p[0,0,0,0,0,0]
        $ 22 "tmp[0] = read_input_float_register(0)"
        tmp[0] = read_input_float_register(0)
        $ 23 "tmp[1] = read_input_float_register(1)"
        tmp[1] = read_input_float_register(1)
        $ 24 "tmp[2] = read_input_float_register(2)"
        tmp[2] = read_input_float_register(2)
        $ 25 "tmp[3] = read_input_float_register(3)"
        tmp[3] = read_input_float_register(3)
        $ 26 "tmp[4] = read_input_float_register(4)"
        tmp[4] = read_input_float_register(4)
        $ 27 "tmp[5] = read_input_float_register(5)"
        tmp[5] = read_input_float_register(5)
        $ 28 "setp≔tmp"
        global setp=tmp
        $ 29 "sync()"
        sync()
      end
    end
  end
  threadId_Thread_1 = run Thread_1()
  while (True):
    $ 6 "Robot Program"
    $ 7 "If read_input_integer_register(0)≟1 and setp≠p[0, 0, 0, 0, 0, 0]"
    if (read_input_integer_register(0) == 1  and  setp != p[0, 0, 0, 0, 0, 0]):
      $ 8 "'Valid pose received from client'"
      # 'Valid pose received from client'
      $ 9 "MoveL"
      $ 10 "setp" "breakAfter"
      movel(setp, a=0.4, v=0.08)
      $ 11 "'Confirm that move was executed'"
      # 'Confirm that move was executed'
      $ 12 "write_output_integer_register(0, 0)"
      write_output_integer_register(0, 0)
      $ 13 "'Wait until script acknowledges confirmation'"
      # 'Wait until script acknowledges confirmation'
      $ 14 "Loop read_input_integer_register(0)≟1"
      while (read_input_integer_register(0) == 1):
        $ 15 "sync()"
        sync()
      end
      $ 16 "'Request next pose'"
      # 'Request next pose'
      $ 17 "write_output_integer_register(0, 1)"
      write_output_integer_register(0, 1)
    end
    $ 18 "sync()"
    sync()
  end
end
